# Matrix

В этой задаче вам необходимо реализовать простой класс матрицы:

- Размер известен в момент конструирования и далее не меняется (кроме как через `operator=`);
- Об исключениях и гарантиях, связанными с ними, задумываться не нужно;
- Весь интерфейс (кроме итераторов) уже задан в [matrix.h](src/matrix.h);
- Все методы крайне рекомендуется реализовывать прямо по месту объявления
  (иначе рискуете столкнуться с проблемами с шаблонами);
- Старайтесь по возможности пользоваться готовыми алгоритмами из стандартной библиотеки (см.
  [\<algorithm\>](https://en.cppreference.com/w/cpp/algorithm),
  [\<numeric\>](https://en.cppreference.com/w/cpp/numeric),
  [\<functional\>](https://en.cppreference.com/w/cpp/utility/functional));
- Запрещено использовать какие-либо контейнеры из стандартной библиотеки (например, `std::vector`);
- Считаем, что в качестве `T` выступает тип, похожий на `int`
  (дёшево копируется, есть дефолтный конструктор и прочие &laquo;хорошие&raquo; свойства).
