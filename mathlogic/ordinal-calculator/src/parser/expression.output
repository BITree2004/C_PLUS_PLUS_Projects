Grammar

    0 $accept: Input $end

    1 Input: Expression EQUAL Expression END

    2 Expression: INTEGER
    3           | LIMIT_ORDINAL
    4           | Expression POW Expression
    5           | Expression MUL Expression
    6           | Expression ADD Expression
    7           | LEFT Expression RIGHT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <integer> (258) 2
    LIMIT_ORDINAL <limit_ordinal> (259) 3
    POW (260) 4
    MUL (261) 5
    ADD (262) 6
    LEFT (263) 7
    RIGHT (264) 7
    END (265) 1
    EQUAL (266) 1


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    Input <e> (13)
        on left: 1
        on right: 0
    Expression <e> (14)
        on left: 2 3 4 5 6 7
        on right: 1 4 5 6 7


State 0

    0 $accept: • Input $end

    INTEGER        shift, and go to state 1
    LIMIT_ORDINAL  shift, and go to state 2
    LEFT           shift, and go to state 3

    Input       go to state 4
    Expression  go to state 5


State 1

    2 Expression: INTEGER •

    $default  reduce using rule 2 (Expression)


State 2

    3 Expression: LIMIT_ORDINAL •

    $default  reduce using rule 3 (Expression)


State 3

    7 Expression: LEFT • Expression RIGHT

    INTEGER        shift, and go to state 1
    LIMIT_ORDINAL  shift, and go to state 2
    LEFT           shift, and go to state 3

    Expression  go to state 6


State 4

    0 $accept: Input • $end

    $end  shift, and go to state 7


State 5

    1 Input: Expression • EQUAL Expression END
    4 Expression: Expression • POW Expression
    5           | Expression • MUL Expression
    6           | Expression • ADD Expression

    POW    shift, and go to state 8
    MUL    shift, and go to state 9
    ADD    shift, and go to state 10
    EQUAL  shift, and go to state 11


State 6

    4 Expression: Expression • POW Expression
    5           | Expression • MUL Expression
    6           | Expression • ADD Expression
    7           | LEFT Expression • RIGHT

    POW    shift, and go to state 8
    MUL    shift, and go to state 9
    ADD    shift, and go to state 10
    RIGHT  shift, and go to state 12


State 7

    0 $accept: Input $end •

    $default  accept


State 8

    4 Expression: Expression POW • Expression

    INTEGER        shift, and go to state 1
    LIMIT_ORDINAL  shift, and go to state 2
    LEFT           shift, and go to state 3

    Expression  go to state 13


State 9

    5 Expression: Expression MUL • Expression

    INTEGER        shift, and go to state 1
    LIMIT_ORDINAL  shift, and go to state 2
    LEFT           shift, and go to state 3

    Expression  go to state 14


State 10

    6 Expression: Expression ADD • Expression

    INTEGER        shift, and go to state 1
    LIMIT_ORDINAL  shift, and go to state 2
    LEFT           shift, and go to state 3

    Expression  go to state 15


State 11

    1 Input: Expression EQUAL • Expression END

    INTEGER        shift, and go to state 1
    LIMIT_ORDINAL  shift, and go to state 2
    LEFT           shift, and go to state 3

    Expression  go to state 16


State 12

    7 Expression: LEFT Expression RIGHT •

    $default  reduce using rule 7 (Expression)


State 13

    4 Expression: Expression • POW Expression
    4           | Expression POW Expression •
    5           | Expression • MUL Expression
    6           | Expression • ADD Expression

    POW  shift, and go to state 8

    $default  reduce using rule 4 (Expression)


State 14

    4 Expression: Expression • POW Expression
    5           | Expression • MUL Expression
    5           | Expression MUL Expression •
    6           | Expression • ADD Expression

    POW  shift, and go to state 8

    $default  reduce using rule 5 (Expression)


State 15

    4 Expression: Expression • POW Expression
    5           | Expression • MUL Expression
    6           | Expression • ADD Expression
    6           | Expression ADD Expression •

    POW  shift, and go to state 8
    MUL  shift, and go to state 9

    $default  reduce using rule 6 (Expression)


State 16

    1 Input: Expression EQUAL Expression • END
    4 Expression: Expression • POW Expression
    5           | Expression • MUL Expression
    6           | Expression • ADD Expression

    POW  shift, and go to state 8
    MUL  shift, and go to state 9
    ADD  shift, and go to state 10
    END  shift, and go to state 17


State 17

    1 Input: Expression EQUAL Expression END •

    $default  reduce using rule 1 (Input)
